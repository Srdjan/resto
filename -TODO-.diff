+todo: paging nav
+todo: add paging (https://www.readability.com/articles/c4khqjub, http://thestorefront.github.io/DataCollection.js/
+todo: handle embedded entities (https://www.readability.com/articles/c4khqjub)
+todo: make video and blog twit about it
+todo: publish slides
+todo: hal-browser: use rel.method value instead of hardcoded POST
+todo: hal-browser:don't show non get link for GET
+todo: fx should return plain js objects - add wrapper to convert to hal
+todo: hal-browser: fix not showing root props
-todo: check this out: https://www.joyent.com/developers/node/design
-todo: add relationships
        https://github.com/letsgetrandy/brototype/blob/master/brototype.js
-todo: add queries
        http://www.slideshare.net/bobdobbes/api-abstraction-api-chaining
        http://begriffs.com/posts/2014-03-06-beyond-http-header-links.html
-todo: use sweet.js or es6ify or wait for flow?
        contracts.js
        sparkler.js
        arrow.js
-todo: make client app:
        http://wilhelmson.github.io/blog/flickr-viewer-searchbar.html
        https://medium.com/react-tutorials/latest
        https://github.com/rendrjs/rendr
        rest lib (hal2js conversion(just data? react component'sstate get updataed?), follow the links, cache meta, ...)
        http://jdkanani.com/smalleditor, http://quilljs.com/
        http://sennajs.com/docs/,
        https://github.com/giann/zappa,
        https://github.com/velveteer/mithril-boilerplate
        http://tympanus.net/Development/TabStylesInspiration/
        http://mobify.github.io/bellows/
        http://www.invisionapp.com/tethr
        https://github.com/walmartlabs/lazojs
        +
        diff UI interaction designs (layout, look and feel, user interaction: for different popular frameworks (ember, angular, react(dflt)))
-todo: find the self contained app with searchable database and reuse as a default HAL based UI?
        http://tympanus.net/codrops/2014/09/23/animated-background-headers/
        http://www.smashingmagazine.com/2014/09/02/building-simple-cross-browser-offline-todo-list-indexeddb-websql
        http://adodson.com/hello.js/
        http://lhorie.github.io/mithril-blog/velocity-animations-in-mithril.html
        https://github.com/jed/domo
        http://semu.github.io/timesheet.js/
        http://fian.my.id/marka/
        http://timothy-long.com/kindling/
-todo: add services (non-persisting api, composition) ?
      https://github.com/srikumarks/cspjs
      https://github.com/ubolonton/js-csp
-todo: security
        http://thejackalofjavascript.com/architecting-a-restful-node-js-app/
        token auth: https://auth0.com/blog/2014/01/07/angularjs-authentication-with-cookies-vs-token/
        http://blog.bitpay.com/2014/09/18/announcing-the-new-bitpay-api.html
-todo: add metadata
      http://jsonary.com/
      http://www.bizcoder.com/self-descriptive-isn-t-don-t-assume-anything
      http://marmelab.com/blog/2014/09/15/easy-backend-for-your-restful-api.html
      use links to hypermedia type (meta) or via header?
      http://brandur.org/elegant-apis
-todo: better pipeline?
      https://github.com/rtc-io/demo-datachannel-node
      http://jlongster.com/Taming-the-Asynchronous-Beast-with-CSP-in-JavaScript
      http://jlongster.com/Transducers.js--A-JavaScript-Library-for-Transformation-of-Data
-todo: add orchestrator: http://www.chorusjs.com/
-todo: use pattern matching to define states?
        https://github.com/natefaubion/sparkler
-todo: dynamicly load app modules: http://stackoverflow.com/questions/10914751/loading-node-js-modules-dynamically-based-on-route
        use http://labs.voronianski.com/melchior.js/ ?
-todo: add liveupdates:
        http://www.html5rocks.com/en/tutorials/es7/observe/
        ws video ?
-todo: ci: http://blog.risingstack.com/continuous-deployment-of-node-js-applications/
-todo: handle errors: https://vimeo.com/78654146
-todo: handle logging: bunyan
-todo: use jsfmt to rewrite(remove) tests: http://rdio.github.io/jsfmt
-todo: use as resto home page: http://fluxxor.com/
-TODO: 1.0 launch!!! https://github.com/slogsdon/placid
-----------------------------------------------------------------------------------------

-todo: add communication layer:
    http://hypercomm.github.io/wonder/
    http://webrtchacks.com/wonder_webrtc_nni/
-todo: make app.js be starting point (microservice?) even further - build unikernel to run it!!!
-todo: process control: http://tech.pro/tutorial/2074/nodejs-managing-child-processes
-todo: real db?
      http://leveldb.org/
      http://kellabyte.com/2013/07/09/lightning-memory-mapped-database/
      add replication: https://github.com/dominictarr/crdt/tree/master/example/simple
-todo: rate limiting: http://code.tutsplus.com/tutorials/how-to-build-rate-limiting-into-your-web-app-login--cms-22133
-todo: add discovery? https://www.youtube.com/watch?v=HJIjTTHWYnE
-todo: use Express (better server error handling (invalid json.!!..)
      https://stormpath.com/blog/node-api-client-part-one/
      http://appdevelopermagazine.com/1718/2014/7/31/StrongLoop-Node.js-API-Server-Released-for-Developing,-Securing-and-Scaling-REST-APIs/
      http://avoidwork.github.io/tenso/rest.html
-todo: restify? node-inspector? paper-trail? xhr -> httpfy?
-todo: server as a resource that serves resources
      function server() {
        port: 0,
        codePath: "path",

        codeCheck: function() {
          fn.compile(code);
          return code.signature.check();
        }

        //or monitor github and get when new available?
        upload: function(code) {
          var newPath = __dir__ + nextSeq;
          file.save(code);
          flip();
        }
        revert: function() {
          //...
        }
      }

-notdoing: handle plain application/json vs application/hal+json
-notdoing: extract datastore into middleware?
-notdoing: handle conditional persistance

!read:
  http://www.bizcoder.com/archive/2014/9

  http://kellabyte.com/2011/09/04/clarifying-rest/
  http://pjmolina.com/metalevel/2014/09/dissecting-an-appnow-specimen/
  https://github.com/dominictarr/crdt/tree/master/example/simple
  http://jlongster.com/Transducers.js--A-JavaScript-Library-for-Transformation-of-Data
  http://andrewdupont.net/2012/12/21/hypermedia-apis-part-one/
  https://speakerdeck.com/owolf/hypermedia-apis-for-the-internet-of-things
  http://apievangelist.com/2014/08/28/video-from-the-hypermedia-panel-at-apicraft-in-detroit-last-month/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+ApiEvangelist+%28API+Evangelist+-+Blog%29
  http://petejohanson.github.io/nerdfest-2014-hypermedia-slides/#/2
  http://www.infoq.com/presentations/problems-distributed-systems

!competition
    https://twofactorauth.org/

!idea
  idea: test in production [http://bahmutov.calepin.co/test-in-production.html]
  idea: create web app for todos with !,@,# and keywords, rules, actions, messaies
  idea: http://fluxxor.com/ as a way to persist data
  server replication: viewstamped replication? with spread?
  read pdf in articles: Ontology versioning on the Semantic Web
  do this as product IFTTT: http://gizmodo.com/ford-puts-voice-activated-ifttt-in-your-dashboard-1635301439

!use
  http://travishorn.github.io/fake-identity/
  https://www.youtube.com/watch?v=VnsA9q9hKEY
  https://github.com/xyncro/frost
  http://www.rackspace.com/blog/objectrocket-adds-fully-managed-redis-service/?cm_mmc=managed-_-cloud-_-contentnam-_-dbweekly-ORredis
  https://github.com/ericelliott/cuid
  http://timelessrepo.com/haters-gonna-hateoas for RESTful APIs talk
  http://raganwald.com/2014/04/10/mixins-forwarding-delegation.html
  https://github.com/Raynos/http-framework...
  https://bitbucket.org/gdamore/mangos/src/f2844c375d81/examples/?at=master
  http://www.chorusjs.com/
  http://trackingjs.com/
  http://blog.newrelic.com/2014/09/08/apipunchlist/
  http://telehash.org/
  https://github.com/fitzgen/github-api
  http://www.slideshare.net/GustafKotte/design-hypermedia-apis
  http://www.slideshare.net/rnewton/amundsen-costbenefitshypermedia
  https://github.com/RisingStack/node-style-guide

  // http://j201.github.io/posts/2013-06-16-Evil-JS-Macros.html
  // var dog = {
  //     mammal : true,
  //     domestic : true,
  //     weight : 50,
  //     speak : function() {
  //         return "woof";
  //     }
  // };
  // var littleDog = extend(dog, {weight : 10});
  // littleDog.speak(); // "woof"
  // littleDog.weight; // 10

-//node os resources:
http://node-os.com/
vs
http://runtimejs.org/

watch:
---------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=rP9EKvWt0zo

-//thinkering -----------------------------------------------------------------------
REST: what happens when you discover that you want hateaos but not rpc part?

it is the message format -> hal with crdts instead of hal/model
it is the topology -> more then point to point
throw away mutability -> always record the change -> but use difss? (like fluxx/react)
throw away sync calls -> all async
throw away all or nothing -> always streams

api jst generates event??? like in the talk @ nordicjs
    websockets clients (ui, persistance, subscribed services... ?)

    game with webRTC - do a chess game? https://github.com/takahirox/toho-like-js
